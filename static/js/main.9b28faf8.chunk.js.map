{"version":3,"sources":["hooks/useFetch.jsx","config/randomTerm.js","components/Search.jsx","hooks/useModal.jsx","components/movie/MovieModal.jsx","components/movie/MovieCard.jsx","components/movie/MovieList.jsx","components/placeholders/Loader.jsx","components/placeholders/ErrorMessage.jsx","components/Navbar.jsx","components/App.jsx","index.js"],"names":["useFetch","url","term","useState","movies","setMovies","loading","setLoading","errorMessage","setErrorMessage","encodedTerm","encodeURIComponent","useEffect","fetch","then","res","json","jsonRes","Response","Search","Error","randValue","sample","props","setTerm","inputRef","useRef","current","focus","handleSubmit","event","preventDefault","searchTerm","className","onSubmit","type","ref","placeholder","onChange","target","value","Title","movie","setMovie","encodedTitle","MovieModal","handleDismiss","ModalElement","document","querySelector","useModal","createPortal","Actors","Director","Plot","Poster","Rated","Released","Runtime","imdbRating","onClick","stopPropagation","src","alt","renderModal","MovieCard","show","setShow","Year","MovieList","map","index","key","Loader","ErrorMessage","Navbar","App","searchValue","ReactDOM","render"],"mappings":"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","file":"static/js/main.9b28faf8.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url, term) => {\n\tconst [movies, setMovies] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst encodedTerm = encodeURIComponent(term);\n\n\tuseEffect(() => {\n\t\tconst fetchMovies = () => {\n\t\t\tfetch(`${url}${encodedTerm}`)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(jsonRes => {\n\t\t\t\t\tif (jsonRes.Response === 'True') {\n\t\t\t\t\t\tsetMovies(jsonRes.Search);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t}\n\t\t\t\t\tsetErrorMessage(jsonRes.Error);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t});\n\t\t};\n\t\tfetchMovies();\n\t\t// eslint-disable-next-line\n\t}, [encodedTerm]);\n\n\treturn [movies, loading, errorMessage];\n};\n\nexport default useFetch;\n","import sample from 'lodash/sample';\n\nconst movieArray = ['batman', 'avengers', 'lego', 'love', 'one', 'black'];\nconst randValue = sample(movieArray);\n\nexport default randValue;\n","import React, { useState, useEffect, useRef } from 'react';\nimport '../styles/Search.css';\n\nconst Search = props => {\n\tconst [term, setTerm] = useState('');\n\tconst inputRef = useRef();\n\n\tuseEffect(() => {\n\t\tinputRef.current.focus();\n\t}, []);\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tprops.searchTerm(term);\n\t\tsetTerm('');\n\t\tinputRef.current.focus();\n\t};\n\n\tconst renderComponent = () => {\n\t\treturn (\n\t\t\t<form className=\"search-form ui form\" onSubmit={handleSubmit}>\n\t\t\t\t<div className=\"field\">\n\t\t\t\t\t<label>Search for your favourite movies!</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tonChange={event => setTerm(event.target.value)}\n\t\t\t\t\t\tvalue={term}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t};\n\n\treturn <div>{renderComponent()}</div>;\n};\n\nexport default Search;\n","import { useState, useEffect } from 'react';\n\nconst useFetch = Title => {\n\tconst [movie, setMovie] = useState({});\n\tconst encodedTitle = encodeURIComponent(Title);\n\n\tuseEffect(() => {\n\t\tconst fetchMovies = () => {\n\t\t\tfetch(`http://www.omdbapi.com/?apikey=98b07407&t=${encodedTitle}`)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(jsonRes => setMovie(jsonRes));\n\t\t};\n\t\tfetchMovies();\n\t\t// eslint-disable-next-line\n\t}, [Title]);\n\n\treturn [movie];\n};\n\nexport default useFetch;\n","import React, { Fragment } from 'react';\nimport { createPortal } from 'react-dom';\nimport useModal from '../../hooks/useModal';\n\nconst MovieModal = ({ Title, handleDismiss }) => {\n\tconst ModalElement = document.querySelector('#modal');\n\tconst [movie] = useModal(Title);\n\n\tconst renderModal = () => {\n\t\tconst {\n\t\t\tActors,\n\t\t\tDirector,\n\t\t\tPlot,\n\t\t\tPoster,\n\t\t\tRated,\n\t\t\tReleased,\n\t\t\tRuntime,\n\t\t\tTitle,\n\t\t\timdbRating\n\t\t} = movie;\n\n\t\tconst loader = () => {\n\t\t\treturn <div className=\"ui active text loader\">Loading</div>;\n\t\t};\n\n\t\tconst modalElements = () => {\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"ui standard modal visible active\"\n\t\t\t\t\t\tonClick={event => event.stopPropagation()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"header\">{Title}</div>\n\t\t\t\t\t\t<div className=\"image content\">\n\t\t\t\t\t\t\t<div className=\"ui medium image\">\n\t\t\t\t\t\t\t\t<img src={Poster} alt=\"movie poster\" />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"description\">\n\t\t\t\t\t\t\t\t<h3>{Actors}</h3>\n\t\t\t\t\t\t\t\t<p>Directed by {Director}</p>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<p>{Plot}</p>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<div>Released: {Released}</div>\n\t\t\t\t\t\t\t\t<div>Runtime: {Runtime}</div>\n\t\t\t\t\t\t\t\t<div>Rating: {Rated}</div>\n\t\t\t\t\t\t\t\t<div>IMDB Rating: {imdbRating}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"ui page modals dimmer visible active\"\n\t\t\t\tonClick={handleDismiss}\n\t\t\t>\n\t\t\t\t{!Poster ? loader() : modalElements()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn createPortal(renderModal(), ModalElement);\n};\n\nexport default MovieModal;\n","import React, { useState, Fragment } from 'react';\nimport MovieModal from './MovieModal';\n\nconst MovieCard = ({ movie }) => {\n\tconst [show, setShow] = useState(false);\n\tconst { Poster, Title, Year } = movie;\n\n\tconst renderMovieCard = () => {\n\t\tconst movieNotLoaded = () => {\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<div className=\"image\">\n\t\t\t\t\t\t<div className=\"ui placeholder\">\n\t\t\t\t\t\t\t<img src=\"\" alt=\"movie has no poster!\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"ui placeholder\">\n\t\t\t\t\t\t\t<div className=\"header\">Loading...</div>\n\t\t\t\t\t\t\t<div className=\"meta\">Loading...</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t};\n\n\t\tconst movieLoaded = () => {\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<div className=\"image\">\n\t\t\t\t\t\t<img src={Poster} alt=\"movie has no poster!\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"header\">{Title}</div>\n\t\t\t\t\t\t<div className=\"meta\">{Year}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ui link card\" onClick={() => setShow(true)}>\n\t\t\t\t{!Poster ? movieNotLoaded() : movieLoaded()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetShow(false);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{show && <MovieModal Title={Title} handleDismiss={handleDismiss} />}\n\t\t\t{renderMovieCard()}\n\t\t</Fragment>\n\t);\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport MovieCard from './MovieCard';\n\nconst MovieList = ({ movies }) => {\n\tconst renderList = () => {\n\t\treturn movies.map((movie, index) => {\n\t\t\treturn (\n\t\t\t\t<div className=\"four wide column\" key={index}>\n\t\t\t\t\t<MovieCard movie={movie} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn <div className=\"ui grid\">{renderList()}</div>;\n};\n\nexport default MovieList;\n","import React from 'react';\n\nconst Loader = () => {\n\treturn (\n\t\t<div className=\"ui active inverted dimmer\">\n\t\t\t<div className=\"ui text loader\">Loading</div>\n\t\t</div>\n\t);\n};\n\nexport default Loader;\n","import React from 'react';\n\nconst ErrorMessage = ({ errorMessage }) => {\n\treturn (\n\t\t<div className=\"ui negative message\">\n\t\t\t<div className=\"header\">An error has occured</div>\n\t\t\t<p>{errorMessage}</p>\n\t\t</div>\n\t);\n};\n\nexport default ErrorMessage;\n","import React from 'react';\n\nconst Navbar = () => {\n\treturn (\n\t\t<div className=\"nav-bar ui inverted top fixed one item massive menu\">\n\t\t\t<div className=\"header item\">OMDB Search</div>\n\t\t</div>\n\t);\n};\n\nexport default Navbar;\n","import React, { useState, Fragment } from 'react';\nimport useFetch from '../hooks/useFetch';\nimport randValue from '../config/randomTerm';\n\nimport Search from './Search';\nimport MovieList from './movie/MovieList';\nimport Loader from './placeholders/Loader';\nimport ErrorMessage from './placeholders/ErrorMessage';\nimport Navbar from './Navbar';\n\nimport '../styles/App.css';\n\nconst App = () => {\n\tconst url = `http://www.omdbapi.com/?apikey=98b07407&type=movie&s=`;\n\tconst [term, setTerm] = useState(randValue);\n\tconst [movies, loading, errorMessage] = useFetch(url, term);\n\n\tconst searchTerm = searchValue => {\n\t\tsetTerm(searchValue);\n\t};\n\n\tconst renderMovieList = () => {\n\t\tif (!loading && !errorMessage && movies) {\n\t\t\treturn <MovieList movies={movies} />;\n\t\t} else if (!loading && errorMessage && !movies) {\n\t\t\treturn <ErrorMessage errorMessage={errorMessage} />;\n\t\t}\n\t\treturn <Loader />;\n\t};\n\n\tconst renderComponents = () => {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Navbar />\n\t\t\t\t<div className=\"main-container ui container\">\n\t\t\t\t\t<Search searchTerm={searchTerm} />\n\t\t\t\t\t{renderMovieList()}\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t};\n\n\treturn <Fragment>{renderComponents()}</Fragment>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}